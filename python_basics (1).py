# -*- coding: utf-8 -*-
"""Python-Basics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wOVKNZGvEAsz1qGtQZ-_oonVFjrlR7mx
"""

print("Hello")

pwd

"""### **Variables**"""

a = 10
b = 10.5
c = "Hello"
print(type(a))
print(type(b))
print(type(c))
(a,b,c)

import keyword
print(keyword.kwlist)

"""### **Indexing**"""

s = "I am Netaji Sai"
print(s)
print("0123456789")
print(s.index('N'))
print(s[-10])
# s[-10] = "P"  Strings are immutable

"""### **Slicing**"""

s

s[2:]

s[2:len(s)]

s[-13:]

dir(s)

"""### **Lists**"""

#List is a Heterogenious -> We can give different data types.
#List allow duplicate elements

lst = [1,2,3.5,"Netaji",False,'X']

lst

lst[len(lst)-1]

type(lst[len(lst)-1])

lst.append("Mom")
lst

lst.remove("Mom")
lst

lst.insert((len(lst)-1),"Dad")
lst

lst.pop()

lst.reverse()

lst

# Sort only works if we have similar datatype in the list
# lst.sort()

"""### **Tuple**"""

#tuple -> immutable
t = (5,3.5,"Sai","Guru")
print(t)
print(type(t))

dir(t)

t[3]
print(t.count("Sai"))
print(t.index("Sai"))

t[1:]

# tuple should be converted to list and then we should modify
a = list(t)
a

a.append("Netaji")
t = tuple(a)
t

x = (1,2,3)
z = t+x
z

"""### **Dictionary**"""

student={"name":"Netaji Sai","roll-no":1,"grade":9.3}
student

student["name"]

print("Roll-No :",student["roll-no"],"     Name : ",student["name"],"    Grade : ",student["grade"])

z = {"alpha":['a1','b1','c1'],"numbers":[1,2,3]}
z

z.items()

z.get("alpha")

dir(z)

t = z.copy()
t

t.clear()
t

t = {1:2}
z.update(t)
z

z.update({'alpha': ['a1', 'b1', 'c1'], 'numbers': [1, 2, 3],1:2})
#iterate over a key
print(z.fromkeys("numbers"))
#get -> value from a key
print(z.get(1))
#to get all the keys of a dictionary
print(z.keys())
#to get all the values of a dictionary
print(z.values())
#to remove an item at top
print(z.popitem())
print(z.pop('numbers'))
print(z)

"""### **Sets**"""

#Set -> Collection of ordered
#No duplicates unindexed heterogeneous noslicing
s = {1,"A","Es",9}
s.add("VIT")
s

dir(s)

s1 = {1,2,3}
s2 = {2,3,4,5,6}
print(s1.union(s2))
print(s1.intersection(s2))
print(s1.pop())
print(s2.remove(5))
s1.add(1)
s1.update([4,56,6])
s1.difference(s2)

"""### **Conditional Statements**"""

# 1. If
# 2. else
# 3. elif
# 4. Nested if

"""### **Loops**"""

# while
# for   break-> break loops
#       continue-> skips the specific iteration
#       pass-> all iterations are completed

"""### **Functions**"""

def func():
  return "This is a simple funtion"

func()

def greet(name="User"):
  print("Good Morning",name)

greet()
greet(input("Enter Your Name : "))

#Variable length arguments
def x(a,*b):
  print("Value of a  : ",a)
  print("Values of b : ",b)
  c = 0
  for i in b:
    c+=1
    print("Value of b for iteration ",c," : ",i)

x(1,10,20,30,40,50)

"""### **Exception Handling**"""

print(10/0)
print("Lets discuss exception handling")

try:
  print(10/0)
except(ZeroDivisionError):
  print("Divide by Zero Error","\n")

print("Exception Resolved")

try:
  print("Hii from try block")
  '2'+2
  10/0
  1+spa
except Exception as e:
  print(e,"\n")
finally:
  print("All the Exceptions are handled")